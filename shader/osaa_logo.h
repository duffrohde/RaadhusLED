#ifndef _BLENDER_EXPORT_H_
#define _BLENDER_EXPORT_H_

#define OBJECTS_COUNT 1
#define CURVE 0
/***************************************
 *          local transformations
 ***************************************/

float transformations[][16]={
	{1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.055671f, -0.029692f, 0.000000f, 1.000000f},
 };
/***************************************
 *	faces count for each mesh 
 ***************************************/
unsigned int faces_count[]={44};

/***************************************
 *	vertices count for each mesh 
 ***************************************/
unsigned int vertex_count[]={48};

/***************************************
 *	offset tables for each mesh  
 ***************************************/
unsigned int vertex_offset_table []={
	0, 
};
unsigned int indices_offset_table []={
	0, 
};
/***************************************
 *	vertices definition
 ***************************************/

struct vertex_struct {
	float x,y,z;
	float nx,ny,nz;
	float u,v;
};
struct vertex_struct vertices[]={
	/* CURVE: 48 vertices */
	{-0.010633f, 0.007404f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{0.016798f, 0.003716f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{-0.011829f, 0.012826f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{-0.006776f, 0.006173f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{-0.005420f, -0.000016f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{0.009464f, 0.001605f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{0.013166f, 0.000429f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{0.004780f, -0.002662f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{-0.008394f, -0.002732f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{0.005609f, -0.006425f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{-0.007006f, -0.009007f, 0.004000f, 0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{0.000240f, -0.011311f, 0.004000f, -0.000000f, 0.000000f, 1.000000f, 0.000000f, 0.000000f},
	{0.016798f, 0.003716f, -0.004000f, 0.000000f, 0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{-0.010633f, 0.007404f, -0.004000f, 0.000000f, 0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{-0.011829f, 0.012826f, -0.004000f, 0.000000f, 0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{-0.006776f, 0.006173f, -0.004000f, 0.000000f, 0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{-0.005420f, -0.000016f, -0.004000f, 0.000000f, 0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{0.009464f, 0.001605f, -0.004000f, 0.000000f, -0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{0.013166f, 0.000429f, -0.004000f, 0.000000f, -0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{0.004780f, -0.002662f, -0.004000f, 0.000000f, -0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{-0.008394f, -0.002732f, -0.004000f, 0.000000f, -0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{0.005609f, -0.006425f, -0.004000f, 0.000000f, -0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{-0.007006f, -0.009007f, -0.004000f, 0.000000f, 0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{0.000240f, -0.011311f, -0.004000f, 0.000000f, -0.000000f, -1.000000f, 0.000000f, 0.000000f},
	{0.005609f, -0.006425f, 0.004000f, 0.953001f, -0.302927f, 0.000000f, 0.000000f, 0.000000f},
	{0.000240f, -0.011311f, 0.004000f, 0.213569f, -0.976897f, 0.000000f, 0.000000f, 0.000000f},
	{0.000240f, -0.011311f, -0.004000f, 0.213569f, -0.976897f, 0.000000f, 0.000000f, 0.000000f},
	{0.005609f, -0.006425f, -0.004000f, 0.953001f, -0.302927f, 0.000000f, 0.000000f, 0.000000f},
	{-0.007006f, -0.009007f, 0.004000f, -0.738212f, -0.674520f, 0.000000f, 0.000000f, 0.000000f},
	{-0.007006f, -0.009007f, -0.004000f, -0.738212f, -0.674520f, 0.000000f, 0.000000f, 0.000000f},
	{-0.008394f, -0.002732f, 0.004000f, -0.953368f, 0.301767f, 0.000000f, 0.000000f, 0.000000f},
	{-0.008394f, -0.002732f, -0.004000f, -0.953368f, 0.301767f, 0.000000f, 0.000000f, 0.000000f},
	{-0.005420f, -0.000016f, 0.004000f, -0.953063f, 0.302683f, 0.000000f, 0.000000f, 0.000000f},
	{-0.005420f, -0.000016f, -0.004000f, -0.953063f, 0.302683f, 0.000000f, 0.000000f, 0.000000f},
	{-0.006776f, 0.006173f, 0.004000f, -0.739250f, -0.673391f, 0.000000f, 0.000000f, 0.000000f},
	{-0.006776f, 0.006173f, -0.004000f, -0.739250f, -0.673391f, 0.000000f, 0.000000f, 0.000000f},
	{-0.010633f, 0.007404f, 0.004000f, -0.738823f, -0.673879f, 0.000000f, 0.000000f, 0.000000f},
	{-0.010633f, 0.007404f, -0.004000f, -0.738823f, -0.673879f, 0.000000f, 0.000000f, 0.000000f},
	{-0.011829f, 0.012826f, 0.004000f, -0.674184f, 0.738548f, 0.000000f, 0.000000f, 0.000000f},
	{-0.011829f, 0.012826f, -0.004000f, -0.674184f, 0.738548f, 0.000000f, 0.000000f, 0.000000f},
	{0.016798f, 0.003716f, 0.004000f, 0.977233f, 0.212043f, 0.000000f, 0.000000f, 0.000000f},
	{0.016798f, 0.003716f, -0.004000f, 0.977233f, 0.212043f, 0.000000f, 0.000000f, 0.000000f},
	{0.013166f, 0.000429f, 0.004000f, 0.212287f, -0.977203f, 0.000000f, 0.000000f, 0.000000f},
	{0.013166f, 0.000429f, -0.004000f, 0.212287f, -0.977203f, 0.000000f, 0.000000f, 0.000000f},
	{0.009464f, 0.001605f, 0.004000f, 0.213965f, -0.976836f, 0.000000f, 0.000000f, 0.000000f},
	{0.009464f, 0.001605f, -0.004000f, 0.213965f, -0.976836f, 0.000000f, 0.000000f, 0.000000f},
	{0.004780f, -0.002662f, 0.004000f, 0.953093f, -0.302652f, 0.000000f, 0.000000f, 0.000000f},
	{0.004780f, -0.002662f, -0.004000f, 0.953093f, -0.302652f, 0.000000f, 0.000000f, 0.000000f},
};

#define INX_TYPE GL_UNSIGNED_SHORT
unsigned short indexes[]={
/* CURVE 44 faces */
0, 1, 2, 3, 1, 0, 4, 1, 3, 4, 5, 1, 5, 6, 1, 4, 7, 5, 8, 7, 4, 8, 9, 7, 10, 9, 8, 11, 9, 10, 12, 13, 14, 12, 15, 13, 12, 16, 15, 17, 16, 12, 18, 17, 12, 19, 16, 17, 19, 20, 16, 21, 20, 19, 21, 22, 20, 23, 22, 21, 24, 25, 26, 24, 26, 27, 25, 28, 29, 25, 29, 26, 28, 30, 31, 28, 31, 29, 30, 32, 33, 30, 33, 31, 32, 34, 35, 32, 35, 33, 34, 36, 37, 34, 37, 35, 36, 38, 39, 36, 39, 37, 38, 40, 41, 38, 41, 39, 40, 42, 43, 40, 43, 41, 42, 44, 45, 42, 45, 43, 44, 46, 47, 44, 47, 45, 46, 24, 27, 46, 27, 47, 
};
#endif